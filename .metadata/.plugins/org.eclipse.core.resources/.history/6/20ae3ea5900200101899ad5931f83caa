package com.project.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class springSecurityConfiguration {

    @Bean
    SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            // ðŸ”¹ CSRF Protection is Disabled Only for Public APIs (Retained for Secure APIs)
            .csrf(csrf -> csrf.ignoringRequestMatchers("/public/**"))

            .authorizeHttpRequests(auth -> auth
                // âœ… Allow All CRUD Operations on /public/** (No Authentication Needed)
                .requestMatchers("/public/**").permitAll()
                
                // âœ… Allow Secure CRUD Operations Only for Authenticated Users
                .requestMatchers("/secure/**").authenticated()

                // ðŸ”¹ Any other endpoint requires authentication
                .anyRequest().authenticated()
            )

            // ðŸ”¹ Use a Custom Security Mechanism (No Basic Authentication)
            .formLogin(form -> form.disable())  // No default login form
            .httpBasic(httpBasic -> httpBasic.disable());  // No Basic Authentication

        return http.build();
    }
}
