package com.project.service;

import java.util.Map;
import java.util.Objects;
import java.util.Optional;

import org.hibernate.result.Output;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.common.CommonAutoWired;
import com.example.common.FinalConstants;
import com.project.entity.Muser;
import com.project.entity.TUserProfile;
import com.project.entity.TUserRole;
import com.project.pojo.OutputResponse;
import com.project.pojo.RegisterUserDetails;
import com.project.repository.MUserRepo;
import com.project.repository.TUserProfileRepo;
import com.project.repository.TUserRoleRepo;

@Service 
public class PublicService {





	@Autowired
	private FinalConstants finalConstants;

	@Autowired
	private CommonAutoWired commonAutoWired;


	public OutputResponse registerUser(RegisterUserDetails entity) {
		OutputResponse outputResponse = new OutputResponse();

		if(!entity.isPasswordMatching()) {
			outputResponse.setStatus(finalConstants.FAIL);
			outputResponse.setOutput("Password and Confirm Password not matched");	
			return outputResponse;
		}


		Optional<Muser>mUserCheck = commonAutoWired.mUserRepo.findByUsernameAndEmail(entity.getUserName().trim(), entity.getEmail().trim());
		if(mUserCheck.isPresent()) {
			outputResponse.setStatus(finalConstants.FAIL);
			outputResponse.setOutput("UserName and Email is already present, Please try with other UserName and Email.");
		}else {
			Muser muser = new Muser();
			muser.setUsername(entity.getUserName());
			muser.setEmail(entity.getEmail());
			muser.setCreatedAt(null);
			commonAutoWired.mUserRepo.save(muser);

			TUserProfile tUserProfile = new TUserProfile();
			tUserProfile.setPasswordHash(entity.getConfirmPassword());
			tUserProfile.setUser(muser);

			commonAutoWired.tUserProfileRepo.save(tUserProfile);

			TUserRole tUserRole = new TUserRole();
			tUserRole.setUser(muser);
			tUserRole.setRole("User");
			commonAutoWired.tUserRoleRepo.save(tUserRole);

			outputResponse.setStatus(finalConstants.SUCCESS);
			outputResponse.setOutput("User registered successfully.");
		}

		return outputResponse;		





	}

}
