package com.project.exceptionHandler;

import java.util.HashMap;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.project.pojo.OutputResponse;

@RestControllerAdvice
public class GlobalExceptionHandler {
	
	@ExceptionHandler(MethodArgumentNotValidException.class)
	
	 public ResponseEntity<OutputResponse> handleValidationErrors(MethodArgumentNotValidException ex) {
		OutputResponse outputResponse = new OutputResponse();

		 Map<String, String> errors = new HashMap<>();
        // Extract field errors and put them into a map
        ex.getBindingResult().getFieldErrors().forEach(error ->
            errors.put(error.getField(), error.getDefaultMessage())
        );

        
        outputResponse.setStatus("fail");
        outputResponse.setOutput(errors);

        // Return structured response
        return ResponseEntity.badRequest().body(outputResponse);
    }
	
	
	
	  @ExceptionHandler(Exception.class)
	    public ResponseEntity<String> handleAllExceptions(Exception ex) {
	        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
	                             .body("Something went wrong: " + ex.getMessage());
	    }

}
